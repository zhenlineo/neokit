#!/usr/bin/env bash

# Copyright (c) 2002-2015 "Neo Technology,"
# Network Engine for Objects in Lund AB [http://neotechnology.com]
#
# This file is part of Neo4j.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

source "$(dirname $0)/.neoenv"

function usage {
    SCRIPT=$(basename $0)
    echo "Usage: ${SCRIPT} <command> [<version>]"
    echo ""
    echo "Controller tool for Neo4j services."
    echo ""
    echo "Commands:"
    echo "  unzip - unzip an installed package (will overwrite if necessary)"
    echo "  start - start the Neo4j server"
    echo "  stop  - stop the Neo4j server"
    echo ""
    echo "Report bugs to nigel@neotechnology.com"
}

function set_run_dir {
    set_archive "${NEOKIT_DIST}"
    RUN_DIR="${NEOKIT_RUN}/${ARCHIVE_KEY}"
    mkdir -p ${RUN_DIR} 2> /dev/null
}

function set_neo4j_home {
    set_run_dir
    EXTRACT_DIR="$(ls "${RUN_DIR}")"
    if [ "${EXTRACT_DIR}" == "" ]
    then
        echo 1>&2 "Server directory not found in ${RUN_DIR}"
        exit 1
    else
        NEO4J_HOME="${RUN_DIR}/${EXTRACT_DIR}"
    fi
}

function unzip {
    set_run_dir
    rm -rf "${RUN_DIR}"
    mkdir -p ${RUN_DIR} 2> /dev/null
    tar -x -C "${RUN_DIR}" -f "${ARCHIVE_PATH}"
    set_neo4j_home
}

function start {
    set_neo4j_home
    ${NEO4J_HOME}/bin/neo4j start
    export NEO4J_PID=$(cat ${NEO4J_HOME}/data/neo4j-service.pid)
}

function stop {
    set_neo4j_home
    ${NEO4J_HOME}/bin/neo4j stop
    unset NEO4J_PID
}

COMMAND=$1
if [ "$2" != "" ]
then
    VERSION=$2
fi

if [ "${COMMAND}" == "unzip" ]
then
    unzip
elif [ "${COMMAND}" == "start" ]
then
    start
elif [ "${COMMAND}" == "stop" ]
then
    stop
else
    usage
fi
