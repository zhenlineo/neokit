#!/usr/bin/env bash

# Copyright (c) 2002-2015 "Neo Technology,"
# Network Engine for Objects in Lund AB [http://neotechnology.com]
#
# This file is part of Neo4j.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

source "$(dirname $0)/.neoenv"

NEOKIT=$(dirname $0)
EXIT_STATUS=0
NEOGET_OPTIONS="-ix"
MILESTONE=""
NIGHTLY=""

function usage {
    SCRIPT=$(basename $0)
    echo "Usage: ${SCRIPT} <command> [<version> [<version> ...]]"
    echo ""
    echo "Test runner for Neo4j clients. The command will be executed in"
    echo "turn each Neo4j version specified. Version aliases 'milestone'"
    echo "and 'nightly' may be used instead of specific version numbers."
    echo ""
    echo "Example:"
    echo "  ${SCRIPT} ./runtests.sh 2.3.0 2.2.6 nightly"
    echo ""
    echo "Report bugs to nigel@neotechnology.com"
}

function download_and_start {
    VERSION=$1
    ${NEOKIT}/neoget "${NEOGET_OPTIONS}" ${VERSION} > /dev/null
    ${NEOKIT}/neoctl unzip ${VERSION}
    if [ "${NEO4J_PASSWORD}" == "" ]
    then
        ${NEOKIT}/neoctl start ${VERSION}
    else
        ${NEOKIT}/neoctl start ${VERSION} ${NEO4J_PASSWORD}
    fi
}

function stop {
    VERSION=$1
    ${NEOKIT}/neoctl stop ${VERSION}
}

function stop_and_exit {
    VERSION=$1
    stop ${VERSION}
    exit ${EXIT_STATUS}
}

while getopts ":fh" OPTION
do
  case ${OPTION} in
    f)
      NEOGET_OPTIONS="-i"
      ;;
    h)
      usage
      exit
      ;;
  esac
done

while getopts ":ce" OPTION
do
  case ${OPTION} in
    c)
      NEOGET_OPTIONS="${NEOGET_OPTIONS}c"
      ;;
    e)
      NEOGET_OPTIONS="${NEOGET_OPTIONS}e"
      ;;
    \?)
      echo "Invalid option: -${OPTARG}" >&2
      ;;
  esac
done

shift $(($OPTIND - 1))
COMMAND=$1
shift
if [ "$*" != "" ]
then
    VERSIONS="$*"
else
    set -- ${VERSIONS}
    VERSIONS=$1
fi

for VERSION in ${VERSIONS}
do
    set_version

    echo "======================================================================"
    echo "=== Neo4j ${VERSION_NUMBER}"
    echo "======================================================================"

    trap stop_and_exit SIGINT SIGTERM
    download_and_start ${VERSION}

    echo "----------------------------------------------------------------------"
    ${COMMAND}
    EXIT_STATUS=$?
    echo "----------------------------------------------------------------------"

    trap - SIGINT SIGTERM
    if [ ${EXIT_STATUS} -eq 0 ]
    then
        stop ${VERSION}
    else
        stop_and_exit ${VERSION}
    fi

    echo ""
    echo ""
done
